CREATE DATABASE IF NOT EXISTS BarberShop;
USE BarberShop;

CREATE TABLE IF NOT EXISTS Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Email VARCHAR(255) NOT NULL,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL,
    Password VARCHAR(255) NOT NULL
);

INSERT INTO Users (Email, FirstName, LastName, PhoneNumber, Password)
VALUES ('admin@it.com', 'Admin', 'User', '123456789', '$2y$10$PLWyBtK5D7Q4SVKud11Tbup.jU9tYrodeCRbUzaJ9WPXS65jpuUfy')
ON DUPLICATE KEY UPDATE UserID = UserID;
--heslo: adminspsit

CREATE TABLE IF NOT EXISTS Reservations (
    ReservationID INT PRIMARY KEY AUTO_INCREMENT,
    Time DATE NOT NULL,
    Hour INT,
    Sluzba VARCHAR(255) NOT NULL,
    FirstName VARCHAR(50) NOT NULL,
    LastName VARCHAR(50) NOT NULL,
    Email VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(15) NOT NULL,
    DeleteKey VARCHAR(20) NOT NULL
);

CREATE TABLE sluzby (
    sluzba_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL
);


CREATE TABLE IF NOT EXISTS Products (
    ProductID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL,
    Description TEXT,
    Price DECIMAL(10, 2) NOT NULL,
    Image VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Cart (
    CartID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    ProductID INT,
    Quantity INT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

CREATE TABLE IF NOT EXISTS Orders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    ShippingAddress VARCHAR(255),
    City VARCHAR(100),
    PostalCode VARCHAR(20),
    Country VARCHAR(100),
    OrderDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
CREATE TABLE IF NOT EXISTS orderitems (
    OrderItemID INT PRIMARY KEY AUTO_INCREMENT,
    OrderID INT,
    ProductPrice DECIMAL(10, 2) NOT NULL,
    ProductName VARCHAR(255) NOT NULL,
    Quantity INT,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);







